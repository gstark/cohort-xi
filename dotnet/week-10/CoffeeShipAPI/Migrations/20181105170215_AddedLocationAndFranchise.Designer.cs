// <auto-generated />
using CoffeeShipAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoffeeShipAPI.Migrations
{
    [DbContext(typeof(CoffeeShopFinderContext))]
    [Migration("20181105170215_AddedLocationAndFranchise")]
    partial class AddedLocationAndFranchise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CoffeeShipAPI.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<int>("BrandColor");

                    b.Property<bool>("IsLocal");

                    b.HasKey("Id");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("CoffeeShipAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("FranchiseId");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("PriceRange");

                    b.Property<int>("Rating");

                    b.Property<string>("State");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CoffeeShipAPI.Models.Location", b =>
                {
                    b.HasOne("CoffeeShipAPI.Models.Franchise", "Franchise")
                        .WithMany("Locations")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
